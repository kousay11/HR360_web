{% extends 'baseRH.html.twig' %}

{% block title %}Liste des Candidatures{% endblock %}
{% block heading %}Liste des Candidatures{% endblock %}

{% block css %}
    {{ parent() }}
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .table-container {
            background: white;
            border-radius: 10px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
            padding: 20px;
            margin-bottom: 30px;
        }
        
        .table-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 25px;
        }
        
        .table-responsive {
            border-radius: 8px;
            overflow: hidden;
        }
        
        .table {
            margin-bottom: 0;
            table-layout: fixed;
        }
        
        .table thead th {
            background-color: #4e73df;
            color: white;
            border: none;
            padding: 15px 20px;
            font-weight: 600;
            vertical-align: middle;
        }
        
        .table tbody tr {
            transition: all 0.2s;
        }
        
        .table tbody tr:hover {
            background-color: rgba(78, 115, 223, 0.05);
        }
        
        .table tbody td {
            padding: 12px 15px;
            vertical-align: middle;
            border-top: 1px solid #f0f2f5;
            word-wrap: break-word;
        }
        
        .status-badge {
            padding: 6px 10px;
            border-radius: 20px;
            font-size: 0.8rem;
            font-weight: 600;
            display: inline-block;
            white-space: nowrap;
            text-align: center;
            min-width: 80px;
        }
        
        .documents-container {
            display: flex;
            flex-direction: column;
            gap: 8px;
        }
        
        .document-item {
            display: flex;
            align-items: center;
        }
        
        .file-link {
            color: #4e73df;
            text-decoration: none;
            transition: color 0.2s;
            display: flex;
            align-items: center;
        }
        
        .file-link:hover {
            color: #2e59d9;
            text-decoration: underline;
        }
        
        .file-link i {
            margin-right: 6px;
            color: #e74a3b;
        }
        
        .action-btn {
            border-radius: 20px;
            padding: 5px 10px;
            font-size: 0.8rem;
        }
        
        .empty-state {
            text-align: center;
            padding: 40px;
            background-color: #f8f9fc;
            border-radius: 10px;
        }
        
        .empty-state i {
            font-size: 50px;
            color: #dddfeb;
            margin-bottom: 20px;
        }
        
        .text-original {
            color: #28a745;
        }
        
        .text-modified {
            color: #6c757d;
        }
        
        .text-truncate {
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            display: inline-block;
            max-width: 100%;
        }

        /* Nouveaux styles pour les boutons */
        .action-buttons {
            display: flex;
            justify-content: flex-end;
            gap: 15px;
            margin-top: 20px;
        }

        .btn-statistics {
            background-color: #6c757d;
            color: white;
        }

        .btn-export {
            background-color: #dc3545;
            color: white;
        }

        /* Style pour le modal */
        #statisticsModal .modal-body {
            height: 400px;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        #chart-container {
            width: 100%;
            height: 100%;
        }
        .search-container {
    margin-bottom: 15px;
}

.input-group-text {
    background-color: #f8f9fa;
    border-right: none;
}

#statutSearch {
    border-left: none;
    padding-left: 0;
}

#statutSearch:focus {
    box-shadow: none;
    border-color: #ced4da;
}
    </style>
{% endblock %}

{% block body %}
    <div class="container py-4">
        <div class="table-container">
            <div class="table-header">
            <div class="search-container">
            <div class="input-group" style="width: 300px;">
                <span class="input-group-text"><i class="fas fa-search"></i></span>
                <select id="statutSearch" class="form-select">
                    <option value="">Tous les statuts</option>
                    <option value="Accepté">Accepté</option>
                    <option value="Refusé">Refusé</option>
                    <option value="En attente">En attente</option>
                </select>
            </div>
        </div>
                <h2 class="mb-0">Liste des Candidatures</h2>
            </div>
            
            {% if candidatures|length > 0 %}
                <div class="table-responsive">
                    <table class="table table-hover" id="candidaturesTable">
                        <thead>
                            <tr>
                                <th>Offre</th>
                                <th>Statut</th>
                                <th>Documents</th>
                                <th>Description</th>
                                <th>Date</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            {% for candidature in candidatures %}
                                <tr>
                                    <td>
                                        <strong>{{ candidature.offre.titre ?? 'Offre non spécifiée' }}</strong>
                                    </td>
                                    <td>
                                        <span class="status-badge bg-{{ candidature.statut == 'Accepté' ? 'success' : (candidature.statut == 'Refusé' ? 'danger' : 'warning') }}">
                                            {{ candidature.statut }}
                                        </span>
                                    </td>
                                    <td>
                                        <div class="documents-container">
                                            <div class="document-item">
                                                <a href="{{ asset('uploads/cvs/' ~ candidature.cv) }}" class="file-link" target="_blank">
                                                    <i class="fas fa-file-pdf"></i>
                                                    <span>CV.pdf</span>
                                                </a>
                                            </div>
                                            <div class="document-item">
                                                <a href="{{ asset('uploads/lettres/' ~ candidature.lettreMotivation) }}" class="file-link" target="_blank">
                                                    <i class="fas fa-file-pdf"></i>
                                                    <span>Lettre.pdf</span>
                                                </a>
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        {% if candidature.description %}
                                            <div style="
                                                max-height: 120px;
                                                overflow: hidden;
                                                display: -webkit-box;
                                                -webkit-line-clamp: 3;
                                                -webkit-box-orient: vertical;
                                                text-overflow: ellipsis;
                                                white-space: normal;
                                                word-break: break-word;
                                            " title="{{ candidature.description }}">
                                                {{ candidature.description }}
                                            </div>
                                        {% else %}
                                            <span class="text-muted">Aucune description</span>
                                        {% endif %}
                                    </td>
                                    <td>
                                        <div>
                                            <small class="d-block">{{ candidature.dateModification|date('d/m/Y H:i') }}</small>
                                            {% if candidature.dateModification and candidature.dateModification != candidature.dateCandidature %}
                                                <small class="text-modified">
                                                    <i class="fas fa-clock me-1"></i>Modifié
                                                </small>
                                            {% else %}
                                                <small class="text-original">
                                                    <i class="fas fa-check-circle me-1"></i>Original
                                                </small>
                                            {% endif %}
                                        </div>
                                    </td>
                                    <td>
                                        <div class="d-flex">
                                            <a href="{{ path('app_candidatureBack_edit', {'idCandidature': candidature.idCandidature}) }}" 
                                               class="btn btn-sm btn-outline-secondary action-btn" title="Modifier">
                                                <i class="fas fa-edit"></i>
                                            </a>
                                            <button class="btn btn-sm btn-outline-primary action-btn analyse-btn" 
                                                    title="Analyser" 
                                                    data-cv-path="{{ asset('uploads/cvs/' ~ candidature.cv) }}"
                                                    data-candidature-id="{{ candidature.idCandidature }}">
                                                <i class="fas fa-search"></i>
                                            </button>
                                             {# Nouveau bouton Entretien#}
        
            <a href="{{ path('app_entretien_index', {'idCandidature': candidature.idCandidature}) }}" 
               class="btn btn-sm btn-outline-success action-btn" title="Planifier un entretien">
                <i class="fas fa-calendar-check"></i>
            </a>
    </div>
                                        </div>
                                    </td>
                                </tr>
                            {% endfor %}
                        </tbody>
                    </table>
                </div>

                {# Boutons d'action #}
                <div class="action-buttons">
                    {# Bouton pour les statistiques #}
                    <button type="button" class="btn btn-statistics" data-bs-toggle="modal" data-bs-target="#statisticsModal">
                        <i class="fas fa-chart-pie me-2"></i>Statistiques
                    </button>

                    {# Bouton pour exporter en PDF #}
                     {# Bouton pour exporter en PDF - maintenant via le contrôleur #}
                    <a href="{{ path('app_candidatureBack_export_pdf') }}" class="btn btn-export">
                        <i class="fas fa-file-pdf me-2"></i>Exporter en PDF
                    </a>
                </div>

                {# Modal pour les statistiques #}
                <div class="modal fade" id="statisticsModal" tabindex="-1" aria-labelledby="statisticsModalLabel" aria-hidden="true">
                    <div class="modal-dialog modal-lg">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="statisticsModalLabel">Statistiques des Candidatures</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                <div id="chart-container"></div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fermer</button>
                            </div>
                        </div>
                    </div>
                </div>

            {% else %}
                <div class="empty-state">
                    <i class="fas fa-folder-open"></i>
                    <h4 class="h5 text-gray-800 mb-3">Aucune candidature trouvée</h4>
                    <p class="mb-4">Vous n'avez aucune candidature pour le moment.</p>
                    <a href="#" class="btn btn-primary">
                        <i class="fas fa-plus me-2"></i>Créer une candidature
                    </a>
                </div>
            {% endif %}
        </div>
        <!-- Ajoutez ce modal avant la fermeture du div.container -->
<div class="modal fade" id="analyseModal" tabindex="-1" aria-labelledby="analyseModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="analyseModalLabel">Analyse de correspondance CV/Offre</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="analyseForm" enctype="multipart/form-data">
                    <input type="hidden" id="cvPath" name="cvPath">
                    <input type="hidden" id="candidatureId" name="candidatureId">
                    
                    <div class="mb-3">
                        <label for="jobOfferFile" class="form-label">Télécharger l'offre d'emploi (PDF ou TXT)</label>
                        <input class="form-control" type="file" id="jobOfferFile" name="jobOfferFile" accept=".pdf,.txt" required>
                    </div>
                    <!-- Champ pour afficher le nom du fichier CV -->
<div class="mb-3">
    <label for="cvFileName" class="form-label">Nom du fichier CV</label>
    <input type="text" class="form-control" id="cvFileName" disabled>
</div>

                    
                    <div class="text-center">
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-search me-2"></i>Analyser
                        </button>
                    </div>
                </form>
                
                <!-- Dans la partie du modal d'analyse -->
<div id="analysisResult" class="mt-4 d-none">
    <h5>Résultat de l'analyse</h5>
    <div class="alert" id="resultMessage"></div>
    <div id="analysisDetails" class="mt-3"></div>
    
    <!-- Bouton PDF plus visible -->
    <div class="text-center mt-4">
        <a href="#" id="downloadPdf" class="btn btn-primary">
            <i class="fas fa-file-pdf me-2"></i>Télécharger le rapport complet
        </a>
    </div>
</div>
            </div>
        </div>
    </div>
</div>
    </div>
    {% endblock %}
    {% block js %}
    {{ parent() }}
    {# Bibliothèques JavaScript #}
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js"></script>
    <script>
            // Fonction de recherche par statut
        document.getElementById('statutSearch').addEventListener('change', function() {
            const statut = this.value;
            if (statut) {
                window.location.href = "{{ path('app_candidatureBack_index') }}?statut=" + encodeURIComponent(statut);
            } else {
                window.location.href = "{{ path('app_candidatureBack_index') }}";
            }
        });

        // Pré-sélectionner le statut dans le dropdown si présent dans l'URL
        document.addEventListener('DOMContentLoaded', function() {
            const urlParams = new URLSearchParams(window.location.search);
            const statut = urlParams.get('statut');
            if (statut) {
                document.getElementById('statutSearch').value = statut;
            }
        });
        // Fonction pour générer le graphique
        function generateStatisticsChart() {
        // Compter les statuts
        const statusCounts = {
            'Accepté': 0,
            'Refusé': 0,
            'En attente': 0
        };

        document.querySelectorAll('.status-badge').forEach(badge => {
            const status = badge.textContent.trim();
            if (statusCounts.hasOwnProperty(status)) {
                statusCounts[status]++;
            }
        });

        // Vérifier si un graphique existe déjà et le détruire
        const existingChart = Chart.getChart("statisticsChart");
        if (existingChart) {
            existingChart.destroy();
        }

        // Créer le graphique
        const ctx = document.getElementById('statisticsChart').getContext('2d');
        new Chart(ctx, {
            type: 'pie',
            data: {
                labels: Object.keys(statusCounts),
                datasets: [{
                    data: Object.values(statusCounts),
                    backgroundColor: [
                        '#28a745', // Accepté - vert
                        '#dc3545', // Refusé - rouge
                        '#ffc107'  // En attente - jaune
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        position: 'right',
                    },
                    tooltip: {
                        callbacks: {
                            label: function(context) {
                                const total = context.dataset.data.reduce((a, b) => a + b, 0);
                                const value = context.raw;
                                const percentage = Math.round((value / total) * 100);
                                return `${context.label}: ${value} (${percentage}%)`;
                            }
                        }
                    }
                }
            }
        });
    }

    // Initialiser le graphique quand le modal est complètement affiché
    document.getElementById('statisticsModal').addEventListener('shown.bs.modal', function() {
        // Créer le canvas s'il n'existe pas déjà
        if (!document.getElementById('statisticsChart')) {
            const canvas = document.createElement('canvas');
            canvas.id = 'statisticsChart';
            document.getElementById('chart-container').appendChild(canvas);
        }
        generateStatisticsChart();
    });

    // Nettoyer quand le modal est fermé
    document.getElementById('statisticsModal').addEventListener('hidden.bs.modal', function() {
        const chart = Chart.getChart("statisticsChart");
        if (chart) {
            chart.destroy();
        }
    });

    // Fonction de recherche par statut
    document.getElementById('statutSearch').addEventListener('input', function() {
        const searchTerm = this.value.toLowerCase();
        const rows = document.querySelectorAll('#candidaturesTable tbody tr');
        
        rows.forEach(row => {
            const statut = row.querySelector('.status-badge').textContent.toLowerCase();
            if (statut.includes(searchTerm)) {
                row.style.display = '';
            } else {
                row.style.display = 'none';
            }
        });
    });

    // Réinitialiser la recherche quand on clique sur l'icône
    document.querySelector('.input-group-text').addEventListener('click', function() {
        document.getElementById('statutSearch').value = '';
        const rows = document.querySelectorAll('#candidaturesTable tbody tr');
        rows.forEach(row => row.style.display = '');
    });
    // Gestion de l'analyse
document.querySelectorAll('.analyse-btn').forEach(btn => {
    btn.addEventListener('click', function() {
        const cvPath = this.getAttribute('data-cv-path');
        const candidatureId = this.getAttribute('data-candidature-id');
        
        document.getElementById('cvPath').value = cvPath;
        document.getElementById('candidatureId').value = candidatureId;

        // Extraire le nom du fichier à partir du chemin du fichier
        const fileName = cvPath.split('/').pop();  // Récupère le dernier élément après le dernier '/'
        
        // Afficher le nom du fichier CV dans le modal
        document.getElementById('cvFileName').value = fileName;

        // Réinitialiser le modal
        document.getElementById('analysisResult').classList.add('d-none');
        document.getElementById('downloadPdf').classList.add('d-none');
        
        // Afficher le modal
        const modal = new bootstrap.Modal(document.getElementById('analyseModal'));
        modal.show();
    });
});


// Soumission du formulaire d'analyse
document.getElementById('analyseForm').addEventListener('submit', async function(e) {
    e.preventDefault();
    
    const formData = new FormData();
    formData.append('cvPath', document.getElementById('cvPath').value);
    formData.append('candidatureId', document.getElementById('candidatureId').value);
    formData.append('jobOfferFile', document.getElementById('jobOfferFile').files[0]);
    
    try {
        const response = await fetch('{{ path("app_analyse_candidature") }}', {
            method: 'POST',
            body: formData
        });
        
        const result = await response.json();
        
        // Dans la partie qui gère la réponse de l'analyse
if (result.success) {
    // Afficher les résultats
    const resultDiv = document.getElementById('analysisResult');
    resultDiv.classList.remove('d-none');
    
    const messageDiv = document.getElementById('resultMessage');
    messageDiv.textContent = result.message;
    messageDiv.className = 'alert ' + (result.score < 50 ? 'alert-danger' : 'alert-success');
    
    document.getElementById('analysisDetails').innerHTML = result.details;
    
    // Gestion du PDF - toujours afficher le bouton si l'analyse réussit
    const downloadBtn = document.getElementById('downloadPdf');
    downloadBtn.classList.remove('d-none');
    downloadBtn.href = result.pdfPath;
    downloadBtn.onclick = function(e) {
        e.preventDefault();
        window.open(this.href, '_blank');
    };

        } else {
            alert('Erreur: ' + result.message);
        }
    } catch (error) {
        console.error('Error:', error);
        alert('Une erreur est survenue lors de l\'analyse');
    }
});
    </script>
{% endblock %}