<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Project Dashboard</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="{{ asset('front/css/styleProjet.css') }}">
</head>
<body>

<div class="container">
    <h1 class="mb-4">Project Dashboard</h1>

    <!-- Top Controls -->
    <div class="d-flex justify-content-between align-items-center mb-4 flex-wrap gap-3 top-controls">
        <div class="d-flex gap-2 flex-wrap">
            <input type="text" class="form-control search-box" placeholder="Search projects..." id="searchInput">
            <a href="{{ path('app_projet_prioritize') }}" class="btn btn-prioritize"><i class="fas fa-sort-amount-up me-2"></i> Prioritize</a>
            <a href="{{ path('app_projet_index') }}" class="btn btn-prioritize">
                <i class="fas fa-sync-alt"></i> Refresh
            </a>
        </div>
        <div class="d-flex gap-2 flex-wrap">
            <a href="{{ path('app_projet_new') }}" class="btn btn-add"><i class="fas fa-plus me-2"></i> Add Project</a>
            <button class="btn btn-ai"><i class="fas fa-robot me-2"></i> AI Generator</button>
        </div>
    </div>

    <!-- Projects Grid -->
    <div class="row" id="projectsContainer">
        {{ include('projet/_project_grid.html.twig') }}
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script>
document.addEventListener('DOMContentLoaded', function() {
    const searchInput = document.getElementById('searchInput');
    const projectsContainer = document.getElementById('projectsContainer');
    let searchTimeout;

    searchInput.addEventListener('input', function() {
        clearTimeout(searchTimeout);
        const query = this.value.trim();
        
        searchTimeout = setTimeout(() => {
            if (query.length >= 2 || query.length === 0) {
                fetchSearchResults(query);
            }
        }, 300);
    });

    function fetchSearchResults(query) {
        fetch(`{{ path('app_projet_search') }}?q=${encodeURIComponent(query)}`, {
            headers: {
                'X-Requested-With': 'XMLHttpRequest'
            }
        })
        .then(response => response.text())
        .then(html => {
            projectsContainer.innerHTML = html;
        })
        .catch(error => {
            console.error('Error:', error);
        });
    }
});
</script>
</body>
</html>